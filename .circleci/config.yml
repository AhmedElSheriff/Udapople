version: 2.1

defaults: &dockerdefault
  docker:
    - image: circleci/node:13.8.0

jobs:
  build-frontend:
    <<: *dockerdefault
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    <<: *dockerdefault
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Build back-end
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    <<: *dockerdefault
    steps:
      - checkout
      - restore_cache:
          keys:
            - "frontend-build"
      - run: 
          name: Test Frontend
          command: |
            cd frontend
            npm install
            npm run test

  test-backend:
    <<: *dockerdefault
    steps:
      - checkout
      - restore_cache:
          keys:
            - "backend-build"
      - run: 
          name: Test Backend
          command: |
            cd backend
            npm install
            npm run test

  scan-frontend:
    <<: *dockerdefault
    steps:
      - checkout
      - restore_cache:
          keys:
            - "npm-packages"
      - run: 
          name: Analyze Frontend
          command: |
            cd frontend
            npm install
            # npm install oauth-sign@^0.9.0
            npm audit --audit-level=critical


  scan-backend:
    <<: *dockerdefault
    steps:
      - checkout
      - restore_cache:
          keys:
            - "npm-packages"
      - run: 
          name: Analyze Backend
          command: |
            cd frontend
            npm install
            # npm install oauth-sign@^0.9.0
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical


workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - scan-backend:
          requires: [build-backend]